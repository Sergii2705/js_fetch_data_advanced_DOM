{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","phonesEndpoint","detailsEndpoint","id","request","url","fetch","then","response","ok","Error","status","statusText","headers","get","includes","json","getFirstReceivedDetails","phonesID","Promise","race","map","ID","getAllSuccessfulDetails","allSettled","details","filter","result","value","getThreeFastestDetails","detailsQueue","push","_","slice","phones","phone","document","body","insertAdjacentHTML","detail","join","ThreeFastestDetails","console","log"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DACXC,EAAiB,eACjBC,EAAkB,SAAAC,GAAiBA,MAAAA,WAAAA,OAAAA,EAAf,UAEpBC,EAAU,SAAAC,GACdC,OAAAA,MAAMN,EAAWK,GACdE,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAASF,GAAAA,OAAAA,EAASG,OAAYH,OAAAA,OAAAA,EAASI,aAC5C,IAAKJ,EAASK,QAAQC,IAAI,gBAC9BC,SAAS,oBACJ,MAAA,IAAIL,MAAM,iCAGXF,OAAAA,EAASQ,UAGhBC,EAA0B,SAAAC,GAC9BC,OAAAA,QAAQC,KAAKF,EAASG,IAAI,SAAAC,GAAMlB,OAAAA,EAAQF,EAAgBoB,QAEpDC,EAA0B,SAAAL,GAC9BC,OAAAA,QAAQK,WAAWN,EAASG,IAAI,SAAAC,GAAMlB,OAAAA,EAAQF,EAAgBoB,OAC3Df,KAAK,SAAAkB,GAAWA,OAAAA,EAAQC,OAAO,SAAAC,GAAUA,MAAkB,aAAlBA,EAAOhB,SAC9CU,IAAI,SAAAM,GAAUA,OAAAA,EAAOC,WAGtBC,EAAyB,SAAAX,GACvBY,IAAAA,EAAe,GAEdX,OAAAA,QAAQK,WAAWN,EAASG,IAAI,SAAAC,GAAMlB,OAAAA,EAAQF,EAAgBoB,IAClEf,KAAK,SAAAoB,GAAUG,OAAAA,EAAaC,KAAKJ,QACjCpB,KAAK,SAAAyB,GAAKF,OAAAA,EAAaG,MAAM,EAAG,MAGrC7B,EAAQH,GACLM,KAAK,SAAA2B,GACEhB,IAAAA,EAAWgB,EAAOb,IAAI,SAAAc,GAASA,OAAAA,EAAMhC,KAE3Cc,EAAwBC,GACrBX,KAAK,SAAAkB,GACJW,SAASC,KAAKC,mBAAmB,YAIrBb,4HAAAA,OAAAA,EAAQtB,GAJpB,+DAUJoB,EAAwBL,GACrBX,KAAK,SAAAkB,GACJW,SAASC,KAAKC,mBAAmB,YAIzBb,wHAAAA,OAAAA,EAAQJ,IAAI,SAAAkB,GAAiBA,MAAAA,OAAAA,OAAAA,EAAOpC,GAAlB,WAA6BqC,KAAK,IAJ5D,0DAUJX,EAAuBX,GAEpBX,KAAK,SAAAkC,GAAuBC,OAAAA,QAAQC,IAAIF","file":"main.648d0713.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst phonesEndpoint = '/phones.json';\nconst detailsEndpoint = id => `/phones/${id}.json`;\n\nconst request = url =>\n  fetch(BASE_URL + url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      } else if (!response.headers.get('content-type')\n        .includes('application/json')) {\n        throw new Error('Content type is not supported');\n      }\n\n      return response.json();\n    });\n\nconst getFirstReceivedDetails = phonesID =>\n  Promise.race(phonesID.map(ID => request(detailsEndpoint(ID))));\n\nconst getAllSuccessfulDetails = phonesID =>\n  Promise.allSettled(phonesID.map(ID => request(detailsEndpoint(ID))))\n    .then(details => details.filter(result => result.status !== 'rejected')\n      .map(result => result.value)\n    );\n\nconst getThreeFastestDetails = phonesID => {\n  const detailsQueue = [];\n\n  return Promise.allSettled(phonesID.map(ID => request(detailsEndpoint(ID))\n    .then(result => detailsQueue.push(result))))\n    .then(_ => detailsQueue.slice(0, 3));\n};\n\nrequest(phonesEndpoint)\n  .then(phones => {\n    const phonesID = phones.map(phone => phone.id);\n\n    getFirstReceivedDetails(phonesID)\n      .then(details => {\n        document.body.insertAdjacentHTML('beforeend', `\n          <section class=\"first-received\">\n            <h2> First Received </h2>\n            <ul>\n              <li>${details.id}</li>\n            </ul>\n          </section>\n        `);\n      });\n\n    getAllSuccessfulDetails(phonesID)\n      .then(details => {\n        document.body.insertAdjacentHTML('beforeend', `\n          <section class=\"all-successful\">\n            <h2> All Successful </h2>\n            <ul>\n              ${details.map(detail => `<li>${detail.id}</li>`).join('')}\n            </ul>\n          </section>\n        `);\n      });\n\n    getThreeFastestDetails(phonesID)\n      // eslint-disable-next-line\n      .then(ThreeFastestDetails => console.log(ThreeFastestDetails));\n  });\n"]}